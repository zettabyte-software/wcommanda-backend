# Generated by Django 5.1.5 on 2025-01-31 19:36

import apps.filiais.models
import django.db.models.deletion
import django.db.models.manager
import django_lifecycle.mixins
import django_multitenant.mixins
import django_multitenant.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assinaturas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Filial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('codigo', models.PositiveBigIntegerField(default=1, editable=False, verbose_name='código')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='data de criação')),
                ('hora_criacao', models.TimeField(auto_now_add=True, verbose_name='hora de criação')),
                ('data_ultima_alteracao', models.DateField(auto_now=True, verbose_name='data da última alteração')),
                ('hora_ultima_alteracao', models.TimeField(auto_now=True, verbose_name='hora da última alteração')),
                ('fl_nome', models.CharField(max_length=120, verbose_name='nome')),
                ('fl_cep', models.CharField(blank=True, default='', max_length=8, verbose_name='cep')),
                ('fl_estado', models.PositiveSmallIntegerField(choices=[(0, 'Em branco'), (1, 'Rondônia'), (2, 'Acre'), (3, 'Amazonas'), (4, 'Roraima'), (5, 'Pará'), (6, 'Amapá'), (7, 'Tocantins'), (8, 'Maranhão'), (9, 'Piauí'), (10, 'Ceará'), (11, 'Rio Grande do Norte'), (12, 'Paraíba'), (13, 'Pernambuco'), (14, 'Alagoas'), (15, 'Sergipe'), (16, 'Bahia'), (17, 'Minas Gerais'), (18, 'Espírito Santo'), (19, 'Rio de Janeiro'), (20, 'São Paulo'), (21, 'Paraná'), (22, 'Santa Catarina'), (23, 'Rio Grande do Sul'), (24, 'Mato Grosso do Sul'), (25, 'Mato Grosso'), (26, 'Goiás'), (27, 'Distrito Federal'), (28, 'Exterior')], default=0, verbose_name='estado')),
                ('fl_cidade', models.CharField(blank=True, default='', max_length=50, verbose_name='cidade')),
                ('fl_bairro', models.CharField(blank=True, default='', max_length=40, verbose_name='bairro')),
                ('fl_rua', models.CharField(blank=True, default='', max_length=30, verbose_name='rua')),
                ('fl_numero', models.CharField(blank=True, default='', max_length=8, verbose_name='número')),
                ('fl_complemento', models.CharField(blank=True, default='', max_length=100, verbose_name='complemento')),
                ('fl_celular', models.CharField(blank=True, max_length=11, verbose_name='celular')),
                ('fl_telefone', models.CharField(blank=True, max_length=10, verbose_name='telefone')),
                ('fl_email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('fl_merchat_id_ifood', models.UUIDField(default=None, null=True, verbose_name='id do merchant do iFood')),
                ('fl_catalogo_id', models.UUIDField(default=None, null=True, verbose_name='id do catálogo digital do iFood')),
                ('fl_catalogo_grupo_id', models.UUIDField(default=None, null=True, verbose_name='id do grupo do catálogo do iFood')),
                ('fl_hora_inicio_funcionamento_domingo', models.TimeField(null=True, verbose_name='horário de início no domingo')),
                ('fl_hora_fim_funcionamento_domingo', models.TimeField(null=True, verbose_name='horário de encerramento no domingo')),
                ('fl_hora_inicio_funcionamento_segunda', models.TimeField(null=True, verbose_name='horário de início na segunda-feira')),
                ('fl_hora_fim_funcionamento_segunda', models.TimeField(null=True, verbose_name='horário de encerramento na segunda-feira')),
                ('fl_hora_inicio_funcionamento_terca', models.TimeField(null=True, verbose_name='horário de início na terca-feira')),
                ('fl_hora_fim_funcionamento_terca', models.TimeField(null=True, verbose_name='horário de encerramento na terca-feira')),
                ('fl_hora_inicio_funcionamento_quarta', models.TimeField(null=True, verbose_name='horário de início na quarta-feira')),
                ('fl_hora_fim_funcionamento_quarta', models.TimeField(null=True, verbose_name='horário de encerramento na quarta-feira')),
                ('fl_hora_inicio_funcionamento_quinta', models.TimeField(null=True, verbose_name='horário de início na quinta-feira')),
                ('fl_hora_fim_funcionamento_quinta', models.TimeField(null=True, verbose_name='horário de encerramento na quinta-feira')),
                ('fl_hora_inicio_funcionamento_sexta', models.TimeField(null=True, verbose_name='horário de início na sexta-feira')),
                ('fl_hora_fim_funcionamento_sexta', models.TimeField(null=True, verbose_name='horário de encerramento na sexta-feira')),
                ('fl_hora_inicio_funcionamento_sabado', models.TimeField(null=True, verbose_name='horário de início no sabado')),
                ('fl_hora_fim_funcionamento_sabado', models.TimeField(null=True, verbose_name='horário de encerramento no sabado')),
                ('fl_logo', models.ImageField(blank=True, null=True, upload_to=apps.filiais.models.Filial.make_upload_path, verbose_name='logo')),
                ('assinatura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='assinaturas.assinatura', verbose_name='tenant')),
            ],
            options={
                'verbose_name': 'Filial',
                'verbose_name_plural': 'Filiais',
                'db_table': 'filial',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
    ]
