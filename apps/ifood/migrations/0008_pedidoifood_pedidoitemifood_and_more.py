# Generated by Django 5.1.4 on 2025-01-03 14:27

import django.db.models.deletion
import django.db.models.manager
import django_lifecycle.mixins
import django_multitenant.fields
import django_multitenant.mixins
import django_multitenant.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('filiais', '0010_rename_fl_catalog_id_filial_fl_catalogo_id_and_more'),
        ('ifood', '0007_rename_fd_item_catalog_id_produtoifood_fd_item_catalogo_id'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PedidoIfood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('codigo', models.PositiveBigIntegerField(default=1, editable=False, verbose_name='código')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='data de criação')),
                ('hora_criacao', models.TimeField(auto_now_add=True, verbose_name='hora de criação')),
                ('data_ultima_alteracao', models.DateField(auto_now=True, verbose_name='data da última alteração')),
                ('hora_ultima_alteracao', models.TimeField(auto_now=True, verbose_name='hora da última alteração')),
                ('fd_ifood_id', models.UUIDField(verbose_name='id do pedido no iFood')),
                ('fd_teste', models.BooleanField(default=False, verbose_name='é pedido de teste')),
                ('fd_tipo_pedido', models.CharField(max_length=8, verbose_name='tipo do pedido')),
                ('fd_cep', models.CharField(max_length=8, verbose_name='cep')),
                ('fd_estado', models.CharField(max_length=2, verbose_name='estado')),
                ('fd_cidade', models.CharField(max_length=40, verbose_name='cidade')),
                ('fd_bairro', models.CharField(max_length=30, verbose_name='bairro')),
                ('fd_rua', models.CharField(max_length=15, verbose_name='rua')),
                ('fd_numero', models.CharField(max_length=8, verbose_name='número')),
                ('fd_complemento', models.CharField(blank=True, default='', max_length=50, verbose_name='complemento')),
                ('ambiente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenants.ambiente', verbose_name='tenant')),
                ('filial', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='filiais.filial', verbose_name='filial')),
                ('owner', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Pedido do iFood',
                'verbose_name_plural': 'Pedidos do iFood',
                'db_table': 'pedido_ifood',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
        migrations.CreateModel(
            name='PedidoItemIfood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('codigo', models.PositiveBigIntegerField(default=1, editable=False, verbose_name='código')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='data de criação')),
                ('hora_criacao', models.TimeField(auto_now_add=True, verbose_name='hora de criação')),
                ('data_ultima_alteracao', models.DateField(auto_now=True, verbose_name='data da última alteração')),
                ('hora_ultima_alteracao', models.TimeField(auto_now=True, verbose_name='hora da última alteração')),
                ('ft_ifood_id', models.UUIDField(verbose_name='id do item do pedido no iFood')),
                ('ft_nome_produto', models.CharField(max_length=80, verbose_name='nome do produto')),
                ('fd_imagem_produto', models.CharField(blank=True, default='', max_length=50, verbose_name='complemento')),
                ('ft_unidade', models.CharField(max_length=2, verbose_name='unidade')),
                ('ft_pedido_ifood', models.UUIDField(verbose_name='id do pedido no iFood')),
                ('ft_tipo_pedido', models.CharField(max_length=8, verbose_name='tipo do pedido')),
                ('ft_preco_unitario', models.FloatField(verbose_name='preço unitário')),
                ('ft_quantidade', models.PositiveSmallIntegerField(verbose_name='quantidade')),
                ('ft_preco_total', models.FloatField(verbose_name='preço total')),
                ('ft_observacao', models.CharField(blank=True, default='', max_length=100, verbose_name='observação')),
                ('ambiente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenants.ambiente', verbose_name='tenant')),
                ('filial', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='filiais.filial', verbose_name='filial')),
                ('ft_pedido', django_multitenant.fields.TenantForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='itens', to='ifood.pedidoifood', verbose_name='id interno')),
                ('owner', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Item do Pedido do iFood',
                'verbose_name_plural': 'Itens dos Pedidos do iFood',
                'db_table': 'pedido_item_ifood',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
        migrations.CreateModel(
            name='PedidoItemComplementoIfood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('codigo', models.PositiveBigIntegerField(default=1, editable=False, verbose_name='código')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='data de criação')),
                ('hora_criacao', models.TimeField(auto_now_add=True, verbose_name='hora de criação')),
                ('data_ultima_alteracao', models.DateField(auto_now=True, verbose_name='data da última alteração')),
                ('hora_ultima_alteracao', models.TimeField(auto_now=True, verbose_name='hora da última alteração')),
                ('pf_ifood_id', models.UUIDField(verbose_name='id do complemento do item no iFood')),
                ('pf_quantidade', models.PositiveSmallIntegerField(verbose_name='quantidade')),
                ('pf_unidade', models.CharField(max_length=3, verbose_name='unidade')),
                ('pf_preco', models.FloatField(verbose_name='preço total')),
                ('pf_preco_unitario', models.FloatField(verbose_name='preço unitário')),
                ('ambiente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenants.ambiente', verbose_name='tenant')),
                ('filial', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='filiais.filial', verbose_name='filial')),
                ('owner', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('pf_item_pedido', django_multitenant.fields.TenantForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='complementos', to='ifood.pedidoitemifood', verbose_name='id interno')),
            ],
            options={
                'verbose_name': 'Customização do Item do Pedido do iFood',
                'verbose_name_plural': 'Customizações dos Itens dos Pedidos do iFood',
                'db_table': 'pedido_item_customizacao_ifood',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
    ]
