# Generated by Django 5.1.3 on 2024-11-14 20:09

import apps.produtos.models
import django.db.models.deletion
import django.db.models.manager
import django_multitenant.fields
import django_multitenant.mixins
import django_multitenant.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filiais', '0001_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('codigo', models.PositiveBigIntegerField(default=1, editable=False, verbose_name='código')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='data de criação')),
                ('hora_criacao', models.TimeField(auto_now_add=True, verbose_name='hora de criação')),
                ('data_ultima_alteracao', models.DateField(auto_now=True, verbose_name='data da última alteração')),
                ('hora_ultima_alteracao', models.TimeField(auto_now=True, verbose_name='hora da última alteração')),
                ('pr_tipo', models.PositiveSmallIntegerField(choices=[(1, 'Preparável'), (2, 'Consumível')], default=2, verbose_name='tipo')),
                ('pr_nome', models.CharField(max_length=100, verbose_name='nome')),
                ('pr_codigo_cardapio', models.CharField(max_length=8, verbose_name='código do cardápio')),
                ('pr_preco', models.FloatField(default=0, verbose_name='preço')),
                ('pr_tempo_preparo', models.IntegerField(default=0, verbose_name='código')),
                ('pr_descricao', models.TextField(blank=True, default='', verbose_name='descrição')),
                ('pr_controla_estoque', models.BooleanField(default=False, verbose_name='controla estoque')),
                ('pr_status_padrao_comanda_item', models.PositiveSmallIntegerField(choices=[(1, 'Aberto'), (2, 'Preparando'), (3, 'Pronto'), (4, 'Entregue'), (5, 'Cancelado')], default=1, verbose_name='tipo')),
                ('pr_imagem', models.ImageField(blank=True, null=True, upload_to=apps.produtos.models.Produto.make_upload_path, verbose_name='foto')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'db_table': 'produto',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('codigo', models.PositiveBigIntegerField(default=1, editable=False, verbose_name='código')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='data de criação')),
                ('hora_criacao', models.TimeField(auto_now_add=True, verbose_name='hora de criação')),
                ('data_ultima_alteracao', models.DateField(auto_now=True, verbose_name='data da última alteração')),
                ('hora_ultima_alteracao', models.TimeField(auto_now=True, verbose_name='hora da última alteração')),
                ('cg_nome', models.CharField(max_length=30, verbose_name='nome')),
                ('cg_descricao', models.CharField(blank=True, max_length=100, verbose_name='descrição')),
                ('ambiente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenants.ambiente', verbose_name='tenant')),
                ('filial', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='filiais.filial', verbose_name='filial')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'db_table': 'categoria_produto',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
    ]
