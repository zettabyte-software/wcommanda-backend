# Generated by Django 5.1.4 on 2025-01-27 20:11

import django.db.models.deletion
import django.db.models.manager
import django_lifecycle.mixins
import django_multitenant.fields
import django_multitenant.mixins
import django_multitenant.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filiais', '0010_rename_fl_catalog_id_filial_fl_catalogo_id_and_more'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assinatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ss_nome', models.CharField(max_length=30, verbose_name='nome')),
                ('ss_subdominio', models.CharField(max_length=50, verbose_name='subdominio')),
                ('ss_cloudflare_id', models.CharField(max_length=50, verbose_name='id cloudflare')),
                ('ss_codigo_licenca', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='código da licença')),
                ('ss_status', models.IntegerField(choices=[(0, 'Normal'), (1, 'Cancelada'), (2, 'Pagamento Atrasado')], default=0, verbose_name='status')),
                ('ss_integracoes_ifood', models.PositiveIntegerField(default=1, verbose_name='número integrações ifood utilizadas')),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'db_table': 'assinatura',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, models.Model),
            managers=[
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
        migrations.CreateModel(
            name='Plano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('codigo', models.PositiveBigIntegerField(default=1, editable=False, verbose_name='código')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='data de criação')),
                ('hora_criacao', models.TimeField(auto_now_add=True, verbose_name='hora de criação')),
                ('data_ultima_alteracao', models.DateField(auto_now=True, verbose_name='data da última alteração')),
                ('hora_ultima_alteracao', models.TimeField(auto_now=True, verbose_name='hora da última alteração')),
                ('pl_nome', models.CharField(max_length=15, verbose_name='nome')),
                ('pl_tier', models.PositiveIntegerField(choices=[(1, 'Tier 1'), (2, 'Tier 2'), (3, 'Tier 3'), (4, 'Tier 4')], default=4, verbose_name='tíer')),
                ('pl_numero_usuarios', models.PositiveIntegerField(default=1, verbose_name='número usuarios')),
                ('pl_limite_integracoes_ifood', models.PositiveIntegerField(default=1, verbose_name='número integrações ifood permitidas')),
                ('pl_valor_mensalidade', models.FloatField(default=0, verbose_name='valor mensalidade')),
                ('pl_observacao', models.CharField(max_length=50, verbose_name='observação')),
                ('ambiente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenants.ambiente', verbose_name='tenant')),
                ('filial', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='filiais.filial', verbose_name='filial')),
                ('owner', django_multitenant.fields.TenantForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('pl_assinatura', django_multitenant.fields.TenantForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assinaturas.assinatura', verbose_name='assinatura')),
            ],
            options={
                'verbose_name': 'Plano',
                'verbose_name_plural': 'Planos',
                'db_table': 'plano',
                'ordering': ['-id'],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django_multitenant.models.TenantManager()),
            ],
        ),
    ]
